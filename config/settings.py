"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import psycopg2.extensions
from typing import Any, Dict, List
from pathlib import Path

from dotenv import load_dotenv, find_dotenv  # type: ignore

from django.utils.translation import gettext_lazy as _

load_dotenv(find_dotenv())


POSTGRES_DB = os.getenv("POSTGRES_DB")
POSTGRES_PASSWORD = os.getenv("POSTGRES_PASSWORD")
POSTGRES_USER = os.getenv("POSTGRES_USER")
HOST = os.getenv("HOST")
DJANGO_ENV = os.getenv("DJANGO_ENV")
ALLOWEDHOSTS = os.getenv("ALLOWED_HOSTS")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-fv!v5&x29t)k0_uilt5&^=77a3s_y%3uf9*i^)j2imylpt&23)"

# SECURITY WARNING: don't run with debug turned on in production!
if DJANGO_ENV == "PRODUCTION":
    DEBUG = False
else:
    DEBUG = True


# ALLOWED_HOSTS: List[str | None] = [ALLOWEDHOSTS]
ALLOWED_HOSTS = ["127.0.0.1"]  # ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps.vmc",
    "apps.vmc_auth",
    "apps.vmc.templatetags.extra_filters",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": POSTGRES_DB,
        "USER": POSTGRES_USER,
        "PASSWORD": POSTGRES_PASSWORD,
        "HOST": "db",
        "PORT": "5432",
        "DISABLE_SERVER_SIDE_CURSORS": True,
        "TEST": {
            "NAME": "sandbox_test_database",
        },
        "OPTIONS": {
            "isolation_level": psycopg2.extensions.ISOLATION_LEVEL_SERIALIZABLE,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": (
            "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
        ),
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    "apps.vmc_auth.authenticate.EmailModelBackend",
    "django.contrib.auth.backends.ModelBackend",
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGES = [
    ("fr", _("French")),
    ("en", _("English")),
]

LOCALE_PATHS = (os.path.join(BASE_DIR, "locale"),)


LANGUAGE_CODE = "fr-FR"

TIME_ZONE = "Europe/Paris"

USE_I18N = True

USE_TZ = False

USE_L10N = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

STATIC_ROOT = "/staticfiles/"

# Custom user
AUTH_USER_MODEL = "vmc_auth.User"

# Redirect to profile URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = "registration/profile.html"

# LOGIN_URL = "/auth/accounts/signin"
LOGIN_URL = "/#mosi"  # MO modal SI signin

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Apps translation constants
SLOGAN = _("Organize your thoughts, do your tasks")
MYACCOUNT = _("My account")
PROFILE = _("Profile")
MAILBOX = _("Mailbox")
SIGNUP = _("Sign up")
LOGIN = _("Log in")
LOGOUT = _("Log out")
MODAL_CREATE_TITLE = _("Add entry")
MODAL_UPDATE_TITLE = _("Edit")
MODAL_DELETE_TITLE = _("Permanently delete entry")
FORM_PLACEHOLDER_TITLE = _("Title")
FORM_PLACEHOLDER_CONTENT = _("Content")
SUBMIT = _("Submit")
CANCEL = _("Cancel")
